import unittest

from auxiliary_funcs import get_kw_list

question_list = [
    'Какие уязвимости могут быть обнаружены в моей информационной системе?',
    'Какие методы аутентификации являются наиболее безопасными?',
    'Какие риски связаны с использованием общедоступных Wi-Fi сетей?',
    'Какой антивирус выбрать для домашнего компьютера?',
    'Что такое информационная безопасность?',
    'Какие уязвимости могут существовать в мобильных приложениях?',
    'Какие виды атак на веб-приложения существуют?'
]
res_list = [
    ['уязвимость', 'обнаружение', 'информация', 'система'],
    ['метод', 'аутентификация', 'идентификация', 'безопасность'],
    ['риск', 'пользователь', 'использование', 'общедоступный', 'wi-fi'],
    ['антивирус', 'домашний', 'компьютер'],
    ['информация', 'операционная', 'безопасность'],
    ['уязвимость', 'мобильное', 'приложение'],
    ['вид', 'атака', 'веб', 'веб-приложение'],
]

# Определяем класс тест-кейса TestSum, наследующий unittest.TestCase
class TestTGFunctions(unittest.TestCase):
    def test_product_amount(self):
        # question = 'Какие виды атак на веб-приложения существуют?'
        # res = get_kw_list(question)
        # self.assertEqual(res, str(['вид', 'атака', 'веб', 'веб-приложение']))
        # self.assertEqual(1, 1)


        for i in range(len(question_list)):
            question = question_list[i]
            res = get_kw_list(question)
            self.assertEqual(res, str(res_list[i]))

unittest.main(argv=[''], verbosity=3, exit=False)